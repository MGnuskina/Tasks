@model PService.PersonViewModel

<div class="modal-content" id="modalWindow">
    @using (Ajax.BeginForm("Edit", "Persons", new AjaxOptions { }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="modal-header">

            </div>
            <div class="modal-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @if (Model != null && Model.PhoneNumbers != null)
                {
                    for (int i = 0; i < Model.PhoneNumbers.Count; i++)
                    {
                            <div>
                                @Html.HiddenFor(model => model.PhoneNumbers[i].Id)
                                @Html.LabelFor(model => model.PhoneNumbers[i].PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <br />
                                @Html.EditorFor(model => model.PhoneNumbers[i].PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PhoneNumbers[i].PhoneNumber, "", new { @class = "text-danger" })
                                @Html.LabelFor(model => model.PhoneNumbers[i].PhoneNumberType, htmlAttributes: new { @class = "control-label col-md-2" })
                                <br />
                                @Html.HiddenFor(model => model.PhoneNumbers[i].PhoneNumberType)
                                @Html.Label(Model.PhoneNumbers[i].PhoneNumberType)
                            </div>
                        }
                    }
                </div>
            </div>
            <div class="modal-footer">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" id="submitButton" value="Save" class="btn btn-default center-block"/>
                    </div>
                    <div>
                        @Html.ActionLink("Back to List", "Index")
                    </div>
                </div>
            </div>
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/Scripts/Functions.js")
}