@model PService.UserViewModel

@{
    ViewBag.Title = "People";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="modelDialog" class="modal fade" role="dialog">
    <div id="dialogContent" class="modal-dialog">

    </div>
</div>

<h2>People</h2>


@using (Html.BeginForm("People", "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <h4>People</h4>
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.LogInName, new { htmlAttributes = new { @class = "form-control" } })
    @Html.HiddenFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
    @Html.HiddenFor(model => model.LastName)

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <table class="table table-hover">
            <tr>
                <th>
                    @Html.DisplayNameFor(el => el.people[0].FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(el => el.people[0].LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(el => el.people[0].Age)
                </th>
                <th>
                <th>
                    <input class="btn btn-primary center-block" type="button" value="Add Person" id="addPerson" onclick="AddPerson()" />
                </th>
            </tr>
            @for (int i = 0; i < Model.people.Count; i++)
                {
                <tr>
                    <td id="column">
                        @Html.HiddenFor(element => element.people[i].Id)
                        @Html.EditorFor(element => element.people[i].FirstName)
                        @Html.ValidationMessageFor(element => element.people[i].FirstName, "", new { @class = "text-danger" })
                    </td>
                    <td id="column">
                        @Html.EditorFor(element => element.people[i].LastName)
                        @Html.ValidationMessageFor(element => element.people[i].LastName, "", new { @class = "text-danger" })
                    </td>
                    <td id="column">
                        @Html.EditorFor(element => element.people[i].Age)
                        @Html.ValidationMessageFor(element => element.people[i].Age, "", new { @class = "text-danger" })
                    </td>

                        @for (int j = 0; j < Model.people[i].PhoneNumbers.Count; j++)
                        {
                            @Html.HiddenFor(element => element.people[i].PhoneNumbers[j].Id)
                            @Html.HiddenFor(element => element.people[i].PhoneNumbers[j].PhoneNumber)
                            @Html.ValidationMessageFor(element => element.people[i].PhoneNumbers[j].PhoneNumber, "", new { @class = "text-danger" })
                            @Html.HiddenFor(element => element.people[i].PhoneNumbers[j].PhoneNumberType)
                            @Html.ValidationMessageFor(element => element.people[i].PhoneNumbers[j].PhoneNumberType, "", new { @class = "text-danger" })
                        }
                        @for (int j = 0; j < Model.people[i].Address.Count; j++)
                        {
                            @Html.HiddenFor(element => element.people[i].Address[j].Id)
                            @Html.HiddenFor(element => element.people[i].Address[j].Street)
                            @Html.HiddenFor(element => element.people[i].Address[j].BuildingNumber)
                            @Html.HiddenFor(element => element.people[i].Address[j].FlatNumber)
                            @Html.HiddenFor(element => element.people[i].Address[j].City)
                            @Html.HiddenFor(element => element.people[i].Address[j].Country)
                        }

                    <td width="95px">
                        <input class="btn btn-warning center-block" type="button" value="Edit" id="editPerson" onclick="EditPerson(@Model.people[i].Id)" />
                    </td>
                    <td width="95px">
                        <input class="btn btn-danger center-block" type="button" value="Delete" id="deletePerson" onclick="DeletePerson(@Model.people[i].Id)" />
                    </td>
                </tr>
            }
        </table>
        <div class="form-group">
            <div class="col-md-offset-6">
                <input type="submit" value="Save" class="btn btn-success btn-lg" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "People")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
