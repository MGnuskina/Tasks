@model PService.PersonViewModel

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

<div class="modal-content" id="modalWindow">
    @using (Ajax.BeginForm("Edit", "User", new AjaxOptions { }))
    {
        <div class="form-horizontal">
            <h4>PersonViewModel</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumbers, htmlAttributes: new { @class = "control-label col-md-2" })
                @for (int i = 0; i < Model.PhoneNumbers.Count; i++)
                {
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PhoneNumbers[i].PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumbers[i].PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PhoneNumbers[i].PhoneNumberType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumbers[i].PhoneNumberType, "", new { @class = "text-danger" })
                    </div>
                }
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                @for (int i = 0; i < Model.Address.Count; i++)
                {
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Address[i].Street, htmlAttributes: new { @class = "control-label col-md-2" })
                        <br />
                        @Html.EditorFor(model => model.Address[i].Street, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address[i].Street, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Address[i].BuildingNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <br />
                        @Html.EditorFor(model => model.Address[i].BuildingNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address[i].BuildingNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Address[i].FlatNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <br />
                        @Html.EditorFor(model => model.Address[i].FlatNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address[i].FlatNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Address[i].City, htmlAttributes: new { @class = "control-label col-md-2" })
                        <br />
                        @Html.EditorFor(model => model.Address[i].City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address[i].City, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.Address[i].Country, htmlAttributes: new { @class = "control-label col-md-2" })
                        <br />
                        @Html.EditorFor(model => model.Address[i].Country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address[i].Country, "", new { @class = "text-danger" })
                    </div>
                }
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "People")
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/Functions.js")
}